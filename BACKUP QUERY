WITH BANK_NAME AS (
    SELECT 
       ASM.SR_ID,
       AST.REG_NAME
    FROM 
       AB_SETUP_REGISTRATION ASM
    JOIN 
       AB_SETUP_REGISTRATION AST 
    ON 
       AST.SR_ID = ASM.SR_IDS 
       AND AST.REG_TYPE = 'BANK'
    WHERE 
       ASM.REG_TYPE = 'BANK LOV'
       AND ASM.ORG_ID = :GV_ORG_ID
    ORDER BY 
       ASM.CREATED_ON DESC
), 
QUERY1 AS (
    SELECT 
        AFL.BANK_ID,
        AFLD.FACILITIES_ID,
        BN.REG_NAME,
        MAX(CASE 
            WHEN ALD.DET_ID = AFLD.FACILITIES_ID AND ALD.LOOKUP_ID = '032' THEN ALD.LOOKUP_DET_NAME 
            ELSE NULL 
        END) AS FACILITIES_NAME,
        NVL(SUM(AFLD.AMOUNT), 0) AS AMOUNT
    FROM 
        AB_FACILITIES_LETTER AFL
    LEFT JOIN 
        AB_FACILITIES_LETTER_DET AFLD  
    ON 
        AFLD.MAST_ID = AFL.ID
    LEFT JOIN 
        AB_LOOKUP_DETAIL ALD 
    ON 
        ALD.DET_ID = AFLD.FACILITIES_ID
    LEFT JOIN 
        BANK_NAME BN 
    ON 
        BN.SR_ID = AFL.BANK_ID
    WHERE 
        AFL.FACILITIES_TYPE = 'FACILITIES MAST'
        AND AFL.ORG_ID = NVL(:GV_ORG_ID, AFL.ORG_ID)
    GROUP BY 
        AFL.BANK_ID, AFLD.FACILITIES_ID, BN.REG_NAME
),
QUERY2 AS (
    SELECT
        AFL.BANK_ID,
        AFL.FACILITIES_ID,
        AFL.MATURITY_TYPE,
        NVL(SUM(AFL.AMOUNT), 0) AS AVAILED,
        AFL.BG_EXPIRE_DATE
    FROM 
        AB_FACILITIES_LETTER AFL
    LEFT JOIN 
        AB_FACILITIES_LETTER_DET AFLD 
    ON 
        AFLD.MAST_ID = AFL.ID
    WHERE 
        AFL.FACILITIES_TYPE = 'LIMIT UTILIZATION'
        AND AFL.ORG_ID = NVL(:GV_ORG_ID, AFL.ORG_ID)
    GROUP BY 
        AFL.BANK_ID, AFL.FACILITIES_ID, AFL.MATURITY_TYPE, AFL.BG_EXPIRE_DATE
)
SELECT 
  
    MAX(Q1.REG_NAME) AS BANK_NAME,
    Q1.FACILITIES_NAME,
    Q2.MATURITY_TYPE,
    SUM(Q1.AMOUNT) AS AMOUNT,
    SUM(Q2.AVAILED) AS AVAILD,
    SUM(Q1.AMOUNT) - SUM(Q2.AVAILED) AS BALANCE,
    MAX(Q2.BG_EXPIRE_DATE) AS BG_EXPIRE_DATE
    , Q1.BANK_ID
FROM 
    QUERY1 Q1
LEFT JOIN 
    QUERY2 Q2 
ON 
    Q1.BANK_ID = Q2.BANK_ID
    AND Q1.FACILITIES_ID = Q2.FACILITIES_ID
WHERE 
    Q2.MATURITY_TYPE = 'NON FINANCIAL'
GROUP BY 
   Q1.BANK_ID, Q1.FACILITIES_NAME, Q2.MATURITY_TYPE
ORDER BY 
    Q1.BANK_ID, Q1.FACILITIES_NAME;
--=================================================================================================
WITH BANK_NAME AS (
    SELECT 
       ASM.SR_ID,
       AST.REG_NAME
    FROM 
       AB_SETUP_REGISTRATION ASM
    JOIN 
       AB_SETUP_REGISTRATION AST 
    ON 
       AST.SR_ID = ASM.SR_IDS 
       AND AST.REG_TYPE = 'BANK'
    WHERE 
       ASM.REG_TYPE = 'BANK LOV'
       AND ASM.ORG_ID = :GV_ORG_ID
    ORDER BY 
       ASM.CREATED_ON DESC
), 
QUERY1 AS (
    SELECT 
        AFL.BANK_ID,
        AFLD.FACILITIES_ID,
        BN.REG_NAME,
        MAX(CASE 
            WHEN ALD.DET_ID = AFLD.FACILITIES_ID AND ALD.LOOKUP_ID = '032' THEN ALD.LOOKUP_DET_NAME 
            ELSE NULL 
        END) AS FACILITIES_NAME,
        NVL(SUM(AFLD.AMOUNT), 0) AS AMOUNT
    FROM 
        AB_FACILITIES_LETTER AFL
    LEFT JOIN 
        AB_FACILITIES_LETTER_DET AFLD  
    ON 
        AFLD.MAST_ID = AFL.ID
    LEFT JOIN 
        AB_LOOKUP_DETAIL ALD 
    ON 
        ALD.DET_ID = AFLD.FACILITIES_ID
    LEFT JOIN 
        BANK_NAME BN 
    ON 
        BN.SR_ID = AFL.BANK_ID
    WHERE 
        AFL.FACILITIES_TYPE = 'FACILITIES MAST'
        AND AFL.ORG_ID = NVL(:GV_ORG_ID, AFL.ORG_ID)
    GROUP BY 
        AFL.BANK_ID, AFLD.FACILITIES_ID, BN.REG_NAME
),
QUERY2 AS (
    SELECT
        AFL.BANK_ID,
        AFL.FACILITIES_ID,
        AFL.MATURITY_TYPE,
        NVL(SUM(AFL.AMOUNT), 0) AS AVAILED,
        AFL.BG_EXPIRE_DATE,
         CASE 
           WHEN TRUNC(AFL.BG_EXPIRE_DATE) = TRUNC(SYSDATE) THEN AFL.AMOUNT
           ELSE 0
       END AS MATURITY, 
       CASE 
           WHEN TRUNC(AFL.BG_EXPIRE_DATE) = TRUNC(SYSDATE - 1) THEN AFL.AMOUNT
           ELSE 0
       END AS TOMORROW,
       CASE 
           WHEN TRUNC(AFL.BG_EXPIRE_DATE) <= TRUNC(SYSDATE - 2) THEN AFL.AMOUNT
           ELSE 0
       END AS DAY_AFTER_TOMORROW, 
       CASE 
           WHEN TRUNC(AFL.BG_EXPIRE_DATE) > TRUNC(SYSDATE) THEN AFL.AMOUNT
           ELSE 0
       END AS OVER_DUE
    FROM 
        AB_FACILITIES_LETTER AFL
    LEFT JOIN 
        AB_FACILITIES_LETTER_DET AFLD 
    ON 
        AFLD.MAST_ID = AFL.ID
    WHERE 
        AFL.FACILITIES_TYPE = 'LIMIT UTILIZATION'
        AND AFL.ORG_ID = NVL(:GV_ORG_ID, AFL.ORG_ID)
    GROUP BY 
        AFL.BANK_ID, AFL.FACILITIES_ID, AFL.MATURITY_TYPE, AFL.BG_EXPIRE_DATE, AFL.AMOUNT
)
SELECT 
    Q1.BANK_ID,
    Q1.REG_NAME AS BANK_NAME,
    Q1.FACILITIES_NAME,
    Q2.MATURITY_TYPE,
    SUM(Q1.AMOUNT) AS AMOUNT,
    SUM(Q2.AVAILED) AS AVAILD,
    SUM(Q1.AMOUNT) - SUM(Q2.AVAILED) AS BALANCE,
    MAX(Q2.BG_EXPIRE_DATE) AS BG_EXPIRE_DATE, 
    SUM(Q2.MATURITY) AS MATURITY,
    SUM(Q2.TOMORROW) AS TOMORROW,
    SUM(Q2.DAY_AFTER_TOMORROW) AS DAY_AFTER_TOMORROW,
    SUM(Q2.OVER_DUE) AS OVER_DUE
FROM 
    QUERY1 Q1
LEFT JOIN 
    QUERY2 Q2 
ON 
    Q1.BANK_ID = Q2.BANK_ID
    AND Q1.FACILITIES_ID = Q2.FACILITIES_ID
WHERE 
    Q2.MATURITY_TYPE = 'FINANCIAL'
GROUP BY 
    Q1.BANK_ID, Q1.REG_NAME, Q1.FACILITIES_NAME, Q2.MATURITY_TYPE,Q1.AMOUNT
ORDER BY 
    Q1.BANK_ID, Q1.FACILITIES_NAME;

