WITH TRANSACTION_HEAD AS(
            SELECT
                        BANK_ID,
                        TRANSACTION_DATE,
                        AST.REG_NAME || ' - ' || ASM.REG_CODE AS BANK,
                       ALD.LOOKUP_DET_NAME AS MODE_TYPE,
                       INITCAP(BT.CREATED_BY) || ' (' || TO_CHAR(BT.CREATED_ON, 'DD-MON-YYYY HH:MI:SS') || ')'  CREATED_BY,
                       BT.COMPANY_BANK_ID,
                       BT.CREATED_ON
            FROM
                        AB_BANK_TRANSACTION BT
            JOIN   AB_SETUP_REGISTRATION ASM ON ASM.SR_ID = BT.COMPANY_BANK_ID
            JOIN  AB_SETUP_REGISTRATION AST ON AST.SR_ID = ASM.SR_IDS
            AND   AST.REG_TYPE = 'BANK'
    LEFT  JOIN  AB_LOOKUP_DETAIL ALD ON ALD.DET_ID = BT.MODE_TYPE
        WHERE
                     BT.TRANS_TYPE= 'TRANSACTION HEAD'
           AND  BT.ORG_ID = :GV_ORG_ID
           AND  BT.STATUS = 'Y' 
)
,TRANSCATION_AMOUNT AS(
SELECT 
                BTH.BANK_ID,
                TO_CHAR(BTH.TRANSACTION_DATE,'DD-MON-YYYY')TRANSACTION_DATE,
                BTH.BANK,
                BTH.MODE_TYPE,
                BTD.AMOUNT TRNASCATION_ENTER,
                TO_NUMBER(REGEXP_REPLACE(AMOUNT, '[^0-9.]', '')) AS BANK_AMOUNT,
                NARRATION || ' Transcation Amount ('||BTD.AMOUNT||')' NARRATION,
                CASE WHEN TO_CHAR(BTH.COMPANY_BANK_ID)=BTD.TRANSACTION_NUMBER THEN NULL ELSE BTD.TRANSACTION_NUMBER END TRANSACTION_NUMBER,
                BTH.CREATED_BY
    FROM 
                     AB_BANK_TRANSACTION BTD 
          JOIN TRANSACTION_HEAD BTH ON BTH.BANK_ID=BTD.IDS
    WHERE
                     BTD.TRANS_TYPE= 'TRANSACTION DET'
           AND  BTD.ORG_ID = :GV_ORG_ID
           AND  BTD.STATUS = 'Y' 
           AND  TRUNC(BTH.CREATED_ON) BETWEEN 
                     NVL(TO_DATE(:P392_FROM_DATE, 'DD-MON-YYYY'), TRUNC(BTH.CREATED_ON))
          AND   NVL(TO_DATE(:P392_TO_DATE, 'DD-MON-YYYY'), TRUNC(BTH.CREATED_ON))
)
, APPROVE_AMOUNT AS(
   SELECT    POR.IDS,
            POR.BANK_ID,
            AST.REG_NAME||' - '|| ASM.REG_CODE  AS BANK,
             SUM(APP_BALANCE) APP_BAL
     FROM    AB_PO_DEMAND_REQ_DET POR
     JOIN 
    AB_SETUP_REGISTRATION ASM ON ASM.SR_ID= POR.BANK_ID
JOIN 
    AB_SETUP_REGISTRATION AST 
    ON AST.SR_ID = ASM.SR_IDS AND AST.REG_TYPE = 'BANK'
WHERE 
    ASM.REG_TYPE = 'BANK LOV'
    AND    POR.ORG_ID=:GV_ORG_ID
      AND    POR.DET_STATUS IS NOT NULL
      AND    POR.STATUS='Y'
     AND     POR.DET_STATUS='ALLOCATED'
      AND    POR.APP_BALANCE > 0
 GROUP BY
           POR.IDS, 
           POR.BANK_ID,
           AST.REG_NAME,
           ASM.REG_CODE
)
SELECT     DRD.DET_ID,
           DRD.ITEM_ID,
           ITM.ITEM_NAME PRODUCT,
           LD.LOOKUP_DET_NAME NATURE_OF_FUND,
           USR.UM_NAME AS DEPARTMENT,
           APM.BANK,
           DRD.REMARKS,
        --   DRD.STATUS,
           DRD.PARTY_ID,
           CASE
                WHEN ASR.REG_TYPE IN ('AGENCY','CUSTOMER REGISTRATION')THEN  ASR.REG_NAME
                ELSE ASR.PARTY_NAME
           END AS PARTY_NAME,
           DRD.BUYING_DATE,
           DRD.DUE_DATE,
            '<span style="background-color: #FFF3CD; color: #856404; padding: 5px 15px; border-radius: 5px; border: 1px solid #FFEEBA; margin: 5px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); display: inline-block;">' ||
            TO_CHAR(DRD.BALANCE, '999G999G999G999G990D00') || '</span>' REQUISTION_AMOUNT,

            '<span style="background-color: #D4EDDA; color: #155724; padding: 5px 15px; border-radius: 5px; border: 1px solid #C3E6CB; margin: 5px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); display: inline-block;">' || 
            TO_CHAR(NVL(APM.APP_BAL, 0), '999G999G999G999G990D00') || '</span>' APPROVE_AMOUNT,

            CASE 
                WHEN DRD.BALANCE - NVL(APM.APP_BAL, 0) > 0 THEN
                    '<span style="background-color: #FFCCCC; color: #990000; padding: 5px 15px; border-radius: 5px; border: 1px solid #BEE5EB; margin: 5px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); display: inline-block;">' || 
                    TO_CHAR(DRD.BALANCE - NVL(APM.APP_BAL, 0), '999G999G999G999G990D00') || '</span>'
                ELSE 
                    '<span style="background-color: #FFCCCC; color: #990000; padding: 5px 15px; border-radius: 5px; border: 1px solid #BEE5EB; margin: 5px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); display: inline-block;">' || 
                    TO_CHAR(DRD.BALANCE - NVL(APM.APP_BAL, 0), '999G999G999G999G990D00') || '</span>'
            END BALANCE_AMOUNT,
        CASE 
                WHEN APM.APP_BAL IS NULL 
                    THEN '<span style="background-color: #FFF3CD; color: #856404; padding: 5px 15px; border-radius: 5px; border: 1px solid #FFEEBA; margin: 5px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); display: inline-block;">Created<span class="static-icon">☑️</span></span>'
                WHEN DRD.BALANCE > NVL(APM.APP_BAL,0)  
                    THEN '<span style="background-color: #D1ECF1; color: #0C5460; padding: 5px 15px; border-radius: 5px; border: 1px solid #BEE5EB; margin: 5px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); display: inline-block;">Partial Allocated<span class="spin-icon">⏳</span></span>'
                WHEN DRD.BALANCE = APM.APP_BAL 
                    THEN '<span style="background-color: #c2e5cb; color: #155724; padding: 5px 15px; border-radius: 5px; border: 1px solid #C3E6CB; margin: 5px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); display: inline-block;">Allocated<span class="static-icon">✅</span></span>'
            ELSE NULL 
        END AS DEMAND_STATUS,           
           INITCAP(DRD.CREATED_BY ||' ('|| TO_CHAR(DRD.CREATED_ON,'DD-MON-YYYY') ||')') AS  CREATED_BY,
           'APPROVE' APPROVE
     from  AB_PO_DEMAND_REQ_DET DRD
LEFT JOIN  AB_SETUP_REGISTRATION ASR ON ASR.SR_ID=DRD.PARTY_ID
LEFT JOIN  AB_ITEMS_MASTER ITM ON ITM.ITEM_ID=DRD.ITEM_ID
LEFT JOIN  APPROVE_AMOUNT APM ON APM.IDS=DRD.DET_ID
LEFT JOIN  AB_LOOKUP_DETAIL LD ON LD.DET_ID = DRD.LOOKUP_ID AND LD.STATUS ='Y' AND LD.LOOKUP_ID='030'
 LEFT JOIN AB_UM_SETUP_REGISTRATION USR ON USR.UM_ID  = DRD.DEPARTMENT_ID AND USR.STATUS = 'Y'
LEFT JOIN TRANSCATION_AMOUNT TA ON TA.BANK_ID = APM.BANK_ID
    WHERE  DRD.ORG_ID=:GV_ORG_ID
      AND  DRD.DET_STATUS IS NOT NULL
      --AND  DRD.STATUS='Y'
      AND  DET_STATUS='CREATED'
      --AND  DRD.BALANCE - NVL(APM.APP_BAL,0) >0
      AND  TRUNC(DRD.CREATED_ON) BETWEEN NVL(TO_DATE(:P328_FROM_DATE, 'DD-MON-YYYY'), TRUNC(DRD.CREATED_ON) )  AND NVL(TO_DATE(:P328_TO_DATE, 'DD-MON-YYYY'), TRUNC(DRD.CREATED_ON) )
ORDER BY   DRD.CREATED_ON DESC
