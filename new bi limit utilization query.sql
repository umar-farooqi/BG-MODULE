WITH BANK_NAME AS (
    SELECT
        ASM.SR_ID,
        AST.REG_NAME
    FROM
        AB_SETUP_REGISTRATION ASM
    JOIN
        AB_SETUP_REGISTRATION AST
    ON
        AST.SR_ID = ASM.SR_IDS 
        AND AST.REG_TYPE = 'BANK'
    WHERE 
        ASM.REG_TYPE = 'BANK LOV'
        AND ASM.ORG_ID = :GV_ORG_ID
    ORDER BY
        ASM.CREATED_ON DESC
), ACCOUNT_NOO AS (
    SELECT   
            ASM.REG_CODE ,
            AFLDS.ID,
            AFLD.ID AS IDD
    FROM 
            AB_SETUP_REGISTRATION ASM
      LEFT JOIN AB_FACILITIES_LETTER_DET AFLDS ON  AFLDS.ACCOUNT_NO = ASM.SR_ID 
      LEFT JOIN AB_FACILITIES_LETTER_DET AFLD ON AFLD.ID = AFLDS.IDS
      LEFT JOIN AB_FACILITIES_LETTER AFL ON AFL.ID = AFLD.MAST_ID
   WHERE 
       AFLDS.IMAGE_TYPE = 'FACILITIES ACCOUNT NUMBER'
   
         AND  AFLDS.ORG_ID = :GV_ORG_ID
),COMPANY_NAME AS (
      SELECT  ASM.REG_NAME  , AFLDS.COMPANY_NAME, AFLD.ID
        
     FROM

     AB_SETUP_REGISTRATION ASM  
             left join AB_FACILITIES_LETTER_DET AFLDS ON  AFLDS.COMPANY_NAME = ASM.SR_ID  AND ASM.REG_TYPE = 'COMPANY'
     LEFT  JOIN AB_FACILITIES_LETTER_DET AFLD ON AFLDS.IDS = AFLD.ID
     LEFT JOIN AB_FACILITIES_LETTER AFL ON AFL.ID = AFLD.MAST_ID

   WHERE 
       AFLDS.IMAGE_TYPE = 'FACILITIES COMPANY'

         AND  AFLDS.ORG_ID = :GV_ORG_ID
)
,QUERY1 AS (
    SELECT 
                    AFLD.ID,
                    AFL.BANK_ID,
                    AFLD.FACILITIES_ID,
                    BN.REG_NAME,
                    MAX(CASE WHEN ALD.DET_ID = AFLD.FACILITIES_ID AND ALD.LOOKUP_ID = '032' THEN ALD.LOOKUP_DET_NAME ELSE NULL END) AS FACILITIES_NAME,
                    SUM(NVL(AFLD.AMOUNT, 0)) AS AMOUNT 
    FROM 
                      AB_FACILITIES_LETTER AFL
    LEFT JOIN  AB_FACILITIES_LETTER_DET AFLD  ON AFLD.MAST_ID = AFL.ID
    LEFT JOIN  AB_LOOKUP_DETAIL ALD ON ALD.DET_ID = AFLD.FACILITIES_ID
    LEFT JOIN  BANK_NAME BN ON  BN.SR_ID = AFL.BANK_ID
    WHERE 
        AFL.FACILITIES_TYPE = 'FACILITIES MAST'
        AND AFL.ORG_ID = NVL(:GV_ORG_ID, AFL.ORG_ID)
    GROUP BY 
        AFL.BANK_ID, AFLD.FACILITIES_ID, BN.REG_NAME, AFLD.ID
),
QUERY2 AS (
    SELECT
        AFLD.ID,
        AFL.BANK_ID,
        AFL.FACILITIES_ID,
        AFL.MATURITY_TYPE,
        ( NVL(SUM(AFL.AMOUNT), 0)) AS AVAILED, -- Handle duplicates
        MAX(AFL.BG_EXPIRE_DATE) AS BG_EXPIRE_DATE,
        SUM(CASE 
            WHEN TRUNC(AFL.BG_EXPIRE_DATE) = TRUNC(SYSDATE) THEN AFL.AMOUNT
            ELSE 0
        END) AS MATURITY,
        SUM(CASE 
            WHEN TRUNC(AFL.BG_EXPIRE_DATE) = TRUNC(SYSDATE - 1) THEN AFL.AMOUNT
            ELSE 0
        END) AS TOMORROW,
        SUM(CASE 
            WHEN TRUNC(AFL.BG_EXPIRE_DATE) <= TRUNC(SYSDATE - 2) THEN AFL.AMOUNT
            ELSE 0
        END) AS DAY_AFTER_TOMORROW,
        SUM(CASE 
            WHEN TRUNC(AFL.BG_EXPIRE_DATE) > TRUNC(SYSDATE) THEN AFL.AMOUNT
            ELSE 0
        END) AS OVER_DUE
    FROM 
        AB_FACILITIES_LETTER AFL
    LEFT JOIN 
        AB_FACILITIES_LETTER_DET AFLD 
    ON 
        AFLD.MAST_ID = AFL.ID
    WHERE 
        AFL.FACILITIES_TYPE = 'LIMIT UTILIZATION'
        AND AFL.ORG_ID = NVL(:GV_ORG_ID, AFL.ORG_ID)
    GROUP BY 
        AFL.BANK_ID, AFL.FACILITIES_ID, AFL.MATURITY_TYPE, AFLD.ID 
)
,BANK_AMOUNT AS(
   SELECT 
                ACCOUNT_NO,
                AFL.BANK_ID,
                NVL(SUM(AFL.AMOUNT), 0) AS AMOUNT
    FROM 
                      AB_FACILITIES_LETTER AFL
    WHERE 
                     AFL.FACILITIES_TYPE = 'LIMIT UTILIZATION'
            AND AFL.ORG_ID = NVL(:GV_ORG_ID, AFL.ORG_ID)
    GROUP BY 
                ACCOUNT_NO,
                AFL.BANK_ID
)
,LIMIT_UTILIZATION AS(
SELECT
    Q1.BANK_ID AS BANK_ID, 
    
    Q1.REG_NAME AS BANK_NAME,
  CN.REG_NAME AS COMPANY_NAME,
  ACC.REG_CODE AS ACCOUNT_NO,
    Q1.FACILITIES_NAME AS FACILITIES_NAME,
    SUM(Q1.AMOUNT)AS TOTAL_AMOUNT,
     MAX(Q2.AVAILED) AS AVAILED,
      SUM(Q1.AMOUNT) - Q2.AVAILED AS BALANCE, 
    SUM(Q2.MATURITY) AS MATURITY,
    SUM(Q2.TOMORROW) AS TOMORROW,
    SUM(Q2.DAY_AFTER_TOMORROW) AS DAY_AFTER_TOMORROW,
    SUM(Q2.OVER_DUE) AS OVER_DUE,
    Q1.FACILITIES_ID,
    ACC.ID
FROM 
    QUERY1 Q1
LEFT JOIN 
    QUERY2 Q2 
ON 
    Q1.BANK_ID = Q2.BANK_ID
     AND Q1.FACILITIES_ID = Q2.FACILITIES_ID
    LEFT JOIN ACCOUNT_NOO ACC ON ACC.IDD = Q1.ID
    LEFT JOIN COMPANY_NAME CN ON CN.ID = Q1.ID
WHERE 
    Q2.MATURITY_TYPE = 'FINANCIAL'
GROUP BY 
    Q1.BANK_ID, 
    Q1.REG_NAME,
   Q2.AVAILED,
  CN.REG_NAME,
  ACC.REG_CODE,
    Q1.FACILITIES_NAME,
    Q1.FACILITIES_ID,
    ACC.ID
)
,FACILITIES_NAME AS(
SELECT
                BANK_ID,
                FACILITIES_NAME,
                FACILITIES_ID,
                SUM(TOTAL_AMOUNT) TOTAL_AMOUNT
    FROM(
    SELECT
    Q1.BANK_ID AS BANK_ID, 
    Q1.REG_NAME AS BANK_NAME,
  CN.REG_NAME AS COMPANY_NAME,
  ACC.REG_CODE AS ACCOUNT_NO,
   Q1.FACILITIES_ID,
    Q1.FACILITIES_NAME AS FACILITIES_NAME,
    SUM(Q1.AMOUNT)AS TOTAL_AMOUNT,
     MAX(Q2.AVAILED) AS AVAILED,
      SUM(Q1.AMOUNT) - Q2.AVAILED AS BALANCE, 
    SUM(Q2.MATURITY) AS MATURITY,
    SUM(Q2.TOMORROW) AS TOMORROW,
    SUM(Q2.DAY_AFTER_TOMORROW) AS DAY_AFTER_TOMORROW,
    SUM(Q2.OVER_DUE) AS OVER_DUE
FROM 
    QUERY1 Q1
LEFT JOIN 
    QUERY2 Q2 
ON 
    Q1.BANK_ID = Q2.BANK_ID
     AND Q1.FACILITIES_ID = Q2.FACILITIES_ID
    LEFT JOIN ACCOUNT_NOO ACC ON ACC.IDD = Q1.ID
    LEFT JOIN COMPANY_NAME CN ON CN.ID = Q1.ID
WHERE 
    Q2.MATURITY_TYPE = 'FINANCIAL'
GROUP BY 
    Q1.BANK_ID, 
    Q1.REG_NAME,
   Q2.AVAILED,
  CN.REG_NAME,
  ACC.REG_CODE,
    Q1.FACILITIES_NAME,
    Q1.FACILITIES_ID)
  GROUP BY
            BANK_ID,
            FACILITIES_NAME,
            FACILITIES_ID
 ),
LIMIT_AMOUNT AS( SELECT 
                ACCOUNT_NO,
                AFL.BANK_ID,
                NVL(SUM(AFL.AMOUNT), 0) AS AMOUNT
    FROM 
                      AB_FACILITIES_LETTER AFL
    WHERE 
                     AFL.FACILITIES_TYPE = 'LIMIT UTILIZATION'
            AND AFL.ORG_ID = NVL(:GV_ORG_ID, AFL.ORG_ID)
    GROUP BY 
                ACCOUNT_NO,
                AFL.BANK_ID
 )
 ,FINAL_SUM AS(
    SELECT
             LU.BANK_ID,
             BANK_NAME,
             COMPANY_NAME,
             LU.ACCOUNT_NO,
             LU.FACILITIES_NAME,
             FN.TOTAL_AMOUNT,
             LA.AMOUNT AVAILED,
             0 BALANCE,
             LU.MATURITY,
            LU.TOMORROW,
            LU.DAY_AFTER_TOMORROW,
            LU.OVER_DUE,
            LU.FACILITIES_ID
    FROM
                      LIMIT_UTILIZATION LU 
    LEFT JOIN  FACILITIES_NAME FN ON FN.BANK_ID=LU.BANK_ID
             AND FN.FACILITIES_ID=LU.FACILITIES_ID
    LEFT JOIN LIMIT_AMOUNT  LA ON LA.BANK_ID=LU.BANK_ID
             AND  LA.ACCOUNT_NO=LU.ID
)
,BALANCE_AMOUNT AS(SELECT
           BANK_ID ,
          NVL( SUM(AVAILED),0) BALANCE,
          FACILITIES_ID
    FROM
           FINAL_SUM
    GROUP BY
           BANK_ID ,
           FACILITIES_ID
           )
    SELECT
             LU.BANK_ID,
             BANK_NAME,
             COMPANY_NAME,
             ACCOUNT_NO,
             FACILITIES_NAME,
             TOTAL_AMOUNT,
             AVAILED,
             BA.BALANCE,
             LU.MATURITY,
            LU.TOMORROW,
            LU.DAY_AFTER_TOMORROW,
            LU.OVER_DUE,
            LU.FACILITIES_ID
    FROM
                        FINAL_SUM LU 
     LEFT JOIN  BALANCE_AMOUNT BA ON BA.FACILITIES_ID=LU.FACILITIES_ID
